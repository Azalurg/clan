from sqlmodel import Session

from app.models import Mission
from app.services.missions import create_mission

items = [
    "sword",
    "amulet",
    "ring",
    "necklace",
    "relic",
    "artifact",
    "scroll",
    "chalice",
    "staff",
    "orb",
    "tome",
    "crown",
    "gauntlet",
    "mask",
    "blade",
    "crystal",
    "dagger",
    "shield",
    "lance",
    "grimoire",
    "sigil",
    "pendant",
    "helm",
    "bracer",
    "phoenix feather",
    "dragon scale",
]

actions_items = [
    "Find",
    "Destroy",
    "Recover",
    "Protect",
    "Retrieve",
    "Steal",
    "Unlock",
    "Uncover",
    "Repair",
    "Seal",
    "Restore",
    "Bury",
    "Enchant",
    "Forge",
    "Purify",
    "Corrupt",
    "Empower",
    "Offer",
]

terms_items = [
    "lost",
    "ancient",
    "enchanted",
    "mystical",
    "cursed",
    "stolen",
    "hidden",
    "forbidden",
    "forgotten",
    "sacred",
    "legendary",
    "mythical",
    "arcane",
    "divine",
    "damned",
    "haunted",
    "shattered",
    "burned",
    "blessed",
    "accursed",
    "desecrated",
    "twilight-forged",
    "eldritch",
]

enemies = [
    "bandit",
    "dragon",
    "goblin",
    "sorcerer",
    "troll",
    "witch",
    "demon",
    "zombie",
    "warlock",
    "vampire",
    "necromancer",
    "werewolf",
    "lich",
    "gargoyle",
    "dark knight",
    "shadow fiend",
    "wraith",
    "chimera",
    "kraken",
    "beholder",
    "djinn",
    "harbinger",
    "fallen paladin",
    "bone golem",
]

actions_enemies = [
    "Defeat",
    "Slay",
    "Banish",
    "Destroy",
    "Overcome",
    "Exorcise",
    "Eradicate",
    "Annihilate",
    "Eliminate",
    "Subdue",
    "Seal Away",
    "Break the Curse of",
    "Trap",
    "Hunt",
    "Cleanse",
    "Decipher",
    "Challenge",
    "Outwit",
]

terms_enemies = [
    "dark",
    "evil",
    "mysterious",
    "powerful",
    "enchanted",
    "cursed",
    "ancient",
    "forbidden",
    "demonic",
    "shadowy",
    "twisted",
    "malevolent",
    "undead",
    "chaotic",
    "sinister",
    "accursed",
    "plague-ridden",
    "fallen",
    "vile",
    "unholy",
    "spectral",
    "hellbound",
]

locations = [
    "forest",
    "cave",
    "castle",
    "temple",
    "mountain",
    "village",
    "swamp",
    "dungeon",
    "crypt",
    "catacomb",
    "ruins",
    "fortress",
    "tower",
    "island",
    "underworld",
    "graveyard",
    "desert",
    "labyrinth",
    "volcano",
    "oasis",
    "floating city",
    "dimensional rift",
    "lost kingdom",
]

actions_locations = [
    "Explore",
    "Enter",
    "Investigate",
    "Search",
    "Scout",
    "Traverse",
    "Descend Into",
    "Break Into",
    "Unveil",
    "Conquer",
    "Cleanse",
    "Defile",
    "Navigate",
    "Survive",
    "Reclaim",
    "Chart",
    "Escape",
    "Unravel",
]

terms_locations = [
    "mysterious",
    "dangerous",
    "enchanted",
    "cursed",
    "abandoned",
    "haunted",
    "forbidden",
    "hidden",
    "desolate",
    "forgotten",
    "ruined",
    "desecrated",
    "shadowy",
    "twisted",
    "sacred",
    "corrupted",
    "blighted",
    "sealed",
    "floating",
    "eternal",
    "void-touched",
    "illusionary",
]

factions = [
    "Brotherhood of Shadows",
    "Order of the Phoenix",
    "Crimson Legion",
    "Silver Hand",
    "Emerald Druids",
    "The Arcane Council",
    "The Black Sun",
    "The Forgotten Ones",
    "The Hollow Knights",
    "The Burning Fangs",
    "The Serpent Cult",
    "The Revenant Order",
    "The Veiled Watchers",
]

allies = [
    "mysterious traveler",
    "royal knight",
    "rogue assassin",
    "wandering sage",
    "rebel leader",
    "exiled prince",
    "battle-hardened mercenary",
    "cunning thief",
    "wayward sorcerer",
    "dragon rider",
    "seer",
    "elf archer",
    "dwarven blacksmith",
    "ghostly guardian",
    "ancient oracle",
]

disasters = [
    "plague",
    "earthquake",
    "storm",
    "flood",
    "fire",
    "drought",
    "war",
    "famine",
    "celestial eclipse",
    "demonic invasion",
    "shadow uprising",
    "blood moon",
    "eternal winter",
]

obstacles = [
    "cursed door",
    "magical seal",
    "riddle of the ancients",
    "poisonous mist",
    "shifting labyrinth",
    "guardian golem",
    "hidden passage",
    "endless night",
    "time loop",
    "mind-breaking illusion",
    "booby-trapped corridor",
    "watchful gargoyle",
    "phantom voices",
    "unstable portal",
]

rewards = [
    "immortality",
    "forbidden knowledge",
    "a kingdom",
    "the favor of a god",
    "a mythical beast companion",
    "a legendary weapon",
    "a lost spell",
    "a seat among the gods",
    "a chance to rewrite history",
    "an unbreakable vow",
    "the last wish",
    "control over time",
    "an ancient prophecy fulfilled",
]

mystical_forces = [
    "the celestial alignment",
    "the whispers of the void",
    "the flow of mana",
    "the balance of fate",
    "the blood of titans",
    "the heart of the world",
    "the shattered reality",
    "the echo of lost souls",
    "the will of the ancients",
    "the forgotten prophecy",
    "the threads of destiny",
]

person_actions = [
    "Befriend",
    "Betray",
    "Spy on",
    "Rescue",
    "Convince",
    "Challenge",
    "Train under",
    "Swear allegiance to",
    "Break free from",
    "Negotiate with",
    "Steal from",
    "Expose the lies of",
    "Compete against",
    "Hunt down",
    "Investigate",
    "Seek revenge on",
    "Forge an alliance with",
    "Recruit",
    "Interrogate",
    "Assist",
    "Track down",
    "Outwit",
    "Deceive",
    "Swindle",
    "Prove your worth to",
]

after_actions = [
    "to change the fate of the kingdom",
    "to unlock a hidden power",
    "to prevent a war",
    "to gain their loyalty",
    "to uncover a dark secret",
    "to reclaim your lost honor",
    "to prove your worth",
    "to set things right",
    "to break an ancient curse",
    "to fulfill an old prophecy",
    "to obtain forbidden knowledge",
    "to seek redemption",
    "to ascend to a higher power",
    "to gain a powerful ally",
    "to restore balance to the world",
    "to protect the innocent",
    "to prepare for the final battle",
    "to overthrow a tyrant",
    "to uncover a hidden conspiracy",
    "to rewrite history",
]

names = [
    "Alduin",
    "Dagoth Ur",
    "Harkon",
    "Miraak",
    "Molag Bal",
    "Vyrthur",
    "Noctis",
    "Selene",
    "Zareth",
    "Eldrin",
    "Vael",
    "Ragnar",
    "Malakar",
    "Orthus",
    "Theron",
    "Sylvaine",
]

# ======================
#   Mission patterns
# ======================

patterns = [
    "{action_enemie} the {enemy} in the {location}",
    "{action_item} the {name}'s {item} in the {location}",
    "{action_item} the {term_item} {item} in the {location}",
    "{action_location} the {term_location} {location}",
    "{action_enemie} the {term_enemie} {enemy}",
    "{action_item} the {term_item} {item} from the {term_location} {location}",
    "{action_enemie} the {term_enemie} {enemy} lurking in the {term_location} {location}",
    "{action_location} the {term_location} {location} to uncover its secrets",
    "{action_item} the {item} before the {term_enemie} {enemy} claims it",
    "{action_enemie} the {enemy} that guards the {term_item} {item}",
    "{person_action} {ally} {after_action}",
    "{person_action} {enemy} {after_action}",
    "{person_action} {faction} {after_action}",
    "{person_action} {name} {after_action}",
    "{action_item} the {term_item} {item} in the {location} {after_action}",
    "{action_enemie} the {term_enemie} {enemy} {after_action}",
    "{action_location} the {term_location} {location} {after_action}",
]


def generate_random_mission(session: Session) -> Mission:
    import random

    mission = random.choice(patterns)
    mission = mission.format(
        action_item=random.choice(actions_items),
        term_item=random.choice(terms_items),
        item=random.choice(items),
        location=random.choice(locations),
        action_enemie=random.choice(actions_enemies),
        enemy=random.choice(enemies),
        term_enemie=random.choice(terms_enemies),
        action_location=random.choice(actions_locations),
        term_location=random.choice(terms_locations),
        faction=random.choice(factions),
        ally=random.choice(allies),
        disaster=random.choice(disasters),
        obstacle=random.choice(obstacles),
        reward=random.choice(rewards),
        mystical_force=random.choice(mystical_forces),
        person_action=random.choice(person_actions),
        after_action=random.choice(after_actions),
        name=random.choice(names),
    )
    return create_mission(session, description=mission)
