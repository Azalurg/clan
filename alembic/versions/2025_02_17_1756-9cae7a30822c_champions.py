"""champions

Revision ID: 9cae7a30822c
Revises:
Create Date: 2025-02-17 17:56:28.787011

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # added


# revision identifiers, used by Alembic.
revision: str = "9cae7a30822c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "characterclass",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("rarity", sa.Integer(), nullable=False),
        sa.Column(
            "main_attribute",
            sa.Enum(
                "STRENGTH",
                "DEXTERITY",
                "CONSTITUTION",
                "INTELLIGENCE",
                "WISDOM",
                "CHARISMA",
                name="attribute",
            ),
            nullable=False,
        ),
        sa.Column(
            "secondary_attribute",
            sa.Enum(
                "STRENGTH",
                "DEXTERITY",
                "CONSTITUTION",
                "INTELLIGENCE",
                "WISDOM",
                "CHARISMA",
                name="attribute",
            ),
            nullable=False,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_characterclass_id"), "characterclass", ["id"], unique=False
    )
    op.create_table(
        "profession",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("rarity", sa.Integer(), nullable=False),
        sa.Column(
            "main_attribute",
            sa.Enum(
                "STRENGTH",
                "DEXTERITY",
                "CONSTITUTION",
                "INTELLIGENCE",
                "WISDOM",
                "CHARISMA",
                name="attribute",
            ),
            nullable=False,
        ),
        sa.Column(
            "secondary_attribute",
            sa.Enum(
                "STRENGTH",
                "DEXTERITY",
                "CONSTITUTION",
                "INTELLIGENCE",
                "WISDOM",
                "CHARISMA",
                name="attribute",
            ),
            nullable=False,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_profession_id"), "profession", ["id"], unique=False)
    op.create_table(
        "race",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("rarity", sa.Integer(), nullable=False),
        sa.Column(
            "main_attribute",
            sa.Enum(
                "STRENGTH",
                "DEXTERITY",
                "CONSTITUTION",
                "INTELLIGENCE",
                "WISDOM",
                "CHARISMA",
                name="attribute",
            ),
            nullable=False,
        ),
        sa.Column(
            "secondary_attribute",
            sa.Enum(
                "STRENGTH",
                "DEXTERITY",
                "CONSTITUTION",
                "INTELLIGENCE",
                "WISDOM",
                "CHARISMA",
                name="attribute",
            ),
            nullable=False,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_race_id"), "race", ["id"], unique=False)
    op.create_table(
        "champion",
        sa.Column("strength", sa.Integer(), nullable=False),
        sa.Column("dexterity", sa.Integer(), nullable=False),
        sa.Column("constitution", sa.Integer(), nullable=False),
        sa.Column("intelligence", sa.Integer(), nullable=False),
        sa.Column("wisdom", sa.Integer(), nullable=False),
        sa.Column("charisma", sa.Integer(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("experience", sa.Integer(), nullable=False),
        sa.Column("experience_to_next_level", sa.Integer(), nullable=False),
        sa.Column("free_attribute_points", sa.Integer(), nullable=False),
        sa.Column("race_id", sa.Uuid(), nullable=True),
        sa.Column("character_class_id", sa.Uuid(), nullable=True),
        sa.Column("profession_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["character_class_id"],
            ["characterclass.id"],
        ),
        sa.ForeignKeyConstraint(
            ["profession_id"],
            ["profession.id"],
        ),
        sa.ForeignKeyConstraint(
            ["race_id"],
            ["race.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_champion_id"), "champion", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_champion_id"), table_name="champion")
    op.drop_table("champion")
    op.drop_index(op.f("ix_race_id"), table_name="race")
    op.drop_table("race")
    op.drop_index(op.f("ix_profession_id"), table_name="profession")
    op.drop_table("profession")
    op.drop_index(op.f("ix_characterclass_id"), table_name="characterclass")
    op.drop_table("characterclass")
    # ### end Alembic commands ###
