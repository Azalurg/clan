"""Update app models

Revision ID: 5ce65f8171f5
Revises: 42ea33e7398c
Create Date: 2025-03-09 18:43:56.422950

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # added
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5ce65f8171f5"
down_revision: Union[str, None] = "42ea33e7398c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exchange",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("resource_id", sa.Uuid(), nullable=False),
        sa.Column("price_per_unit", sa.Integer(), nullable=False),
        sa.Column("available_quantity", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["resource.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_exchange_id"), "exchange", ["id"], unique=False)
    op.create_table(
        "marketoffer",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("clan_id", sa.Uuid(), nullable=False),
        sa.Column("resource_id", sa.Uuid(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("price_per_unit", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["clan_id"],
            ["clan.id"],
        ),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["resource.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_marketoffer_id"), "marketoffer", ["id"], unique=False)
    op.create_table(
        "transaction",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("resource_id", sa.Uuid(), nullable=False),
        sa.Column("seller_clan_id", sa.Uuid(), nullable=True),
        sa.Column("buyer_clan_id", sa.Uuid(), nullable=True),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("price_per_unit", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["buyer_clan_id"],
            ["clan.id"],
        ),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["resource.id"],
        ),
        sa.ForeignKeyConstraint(
            ["seller_clan_id"],
            ["clan.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_transaction_id"), "transaction", ["id"], unique=False)
    op.create_table(
        "warehouse",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("clan_id", sa.Uuid(), nullable=False),
        sa.Column("resource_id", sa.Uuid(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["clan_id"],
            ["clan.id"],
        ),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["resource.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("clan_id", "resource_id"),
    )
    op.create_index(op.f("ix_warehouse_id"), "warehouse", ["id"], unique=False)
    op.create_table(
        "missionreward",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("mission_id", sa.Uuid(), nullable=False),
        sa.Column("money", sa.Integer(), nullable=False),
        sa.Column("experience", sa.Integer(), nullable=False),
        sa.Column("luck", sa.Integer(), nullable=False),
        sa.Column("items", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["mission_id"],
            ["mission.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_missionreward_id"), "missionreward", ["id"], unique=False)
    op.create_table(
        "missionparticipant",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("mission_id", sa.Uuid(), nullable=False),
        sa.Column("champion_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["champion_id"],
            ["champion.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mission_id"],
            ["mission.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_missionparticipant_id"), "missionparticipant", ["id"], unique=False)
    op.drop_index("ix_clanwarehouse_id", table_name="clanwarehouse")
    op.drop_table("clanwarehouse")
    op.add_column("mission", sa.Column("start_time", sa.DateTime(), nullable=True))
    op.add_column("mission", sa.Column("end_time", sa.DateTime(), nullable=True))
    op.drop_column("mission", "max_items")
    op.drop_column("mission", "reward_luck")
    op.drop_column("mission", "duration")
    op.drop_column("mission", "reward_money")
    op.drop_column("mission", "reward_exp")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "mission", sa.Column("reward_exp", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "mission", sa.Column("reward_money", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "mission", sa.Column("duration", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "mission", sa.Column("reward_luck", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "mission", sa.Column("max_items", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.drop_column("mission", "end_time")
    op.drop_column("mission", "start_time")
    op.create_table(
        "clanwarehouse",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("clan_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "resources", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(["clan_id"], ["clan.id"], name="clanwarehouse_clan_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="clanwarehouse_pkey"),
        sa.UniqueConstraint("clan_id", name="clanwarehouse_clan_id_key"),
    )
    op.create_index("ix_clanwarehouse_id", "clanwarehouse", ["id"], unique=False)
    op.drop_index(op.f("ix_missionparticipant_id"), table_name="missionparticipant")
    op.drop_table("missionparticipant")
    op.drop_index(op.f("ix_missionreward_id"), table_name="missionreward")
    op.drop_table("missionreward")
    op.drop_index(op.f("ix_warehouse_id"), table_name="warehouse")
    op.drop_table("warehouse")
    op.drop_index(op.f("ix_transaction_id"), table_name="transaction")
    op.drop_table("transaction")
    op.drop_index(op.f("ix_marketoffer_id"), table_name="marketoffer")
    op.drop_table("marketoffer")
    op.drop_index(op.f("ix_exchange_id"), table_name="exchange")
    op.drop_table("exchange")
    # ### end Alembic commands ###
